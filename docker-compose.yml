# docker-compose.yml
version: '3.8'

services:
  # 1. СЕРВИС СЛУШАТЕЛЯ (Основной рабочий процесс)
  listener:
    build: .
    container_name: retailcrm_listener
    restart: always
    # Используем среду (env) для передачи переменных из файла .env на хосте
    env_file:
      - .env
    volumes:
      # Монтируем директорию для хранения логов чатов
      - ./dialogs:/app/dialogs
    # Запускаем вашу точку входа
    command: python main.py

  # 2. СЕРВИС ЕЖЕДНЕВНЫХ ОТЧЕТОВ (Cron-задача)
  cron-reports:
    build: .
    container_name: retailcrm_cron
    # Должен перезапускаться, если падает, чтобы cron-демон работал постоянно
    restart: always
    # Используем среду (env) для передачи переменных из файла .env на хосте
    env_file:
      - .env
    volumes:
      # Монтируем ту же директорию для доступа к файлам диалогов
      - ./dialogs:/app/dialogs
    # Запускаем команду в bash для настройки и запуска cron
    command: >
      /bin/bash -c "
        # Настраиваем cron на запуск скрипта в 23:30 (30 23 * * *)
        # ИСПОЛЬЗУЕМ ПОЛНЫЙ ПУТЬ К PYTHON ДЛЯ НАДЕЖНОСТИ
        echo '30 23 * * * /usr/local/bin/python /app/report_generator.py >> /var/log/cron.log 2>&1' | crontab -
        
        # Выводим расписание cron для проверки (в логах контейнера)
        crontab -l
        
        # Запускаем cron-демон и держим контейнер активным (cron -f)
        cron -f
      "